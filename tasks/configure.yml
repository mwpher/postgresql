# file: postgresql/tasks/configure.yml

- name: PostgreSQL | Make sure the postgres data directory exists
  file:
    path: "{{postgresql_data_directory}}"
    owner: "{{ postgresql_service_user }}"
    group: "{{ postgresql_service_group }}"
    state: directory
    mode: 0700
  register: pgdata_dir_exist

- name: PostgreSQL | Make sure the postgres conf directory exists
  file:
    path: "{{postgresql_conf_directory}}"
    owner: "{{postgresql_admin_user}}"
    group: "{{postgresql_admin_user}}"
    state: directory
    mode: 0700

- name: PostgreSQL | Make sure the postgres log directory exists
  file:
    path: "{{postgresql_log_directory}}"
    owner: "{{postgresql_admin_user}}"
    group: "{{postgresql_admin_user}}"
    state: directory
    mode: 0700

- name: PostgreSQL | Make sure the postgres socket directories exist
  file:
    path: "{{item}}"
    owner: "{{postgresql_admin_user}}"
    group: "{{postgresql_admin_user}}"
    state: directory
    mode: 0700
  with_items: postgresql_unix_socket_directories

- name: PostgreSQL | Make sure pgsql knows where the data is
  template:
    src: dotprofile
    dest: "{{postgresql_home_directory}}/.profile"
    owner: "{{postgresql_admin_user}}"
    group: "{{postgresql_admin_user}}"
    mode: 0700

- name: PostgreSQL | Specify conf location
  command: 'sysrc postgresql_data="{{postgresql_conf_directory}}"'
  changed_when: false

- name: PostgreSQL | Do we need to initialize the database?
  stat:
    path: "{{postgresql_data_directory}}/PG_VERSION"
  register: db_ready

- name: PostgreSQL | Reset the cluster - drop the existing one
  shell: pg_ctl stop && rm -rf {{postgresql_data_directory}}/*
  sudo: yes
  sudo_user: "{{ postgresql_admin_user }}"
  environment: postgresql_env
  when: postgresql_cluster_reset and pgdata_dir_exist.changed

- name: PostgreSQL | Reset the cluster - create a new one (with specified encoding and locale)
  shell: su -l {{postgresql_service_user}} -c 'initdb --locale {{postgresql_locale}} -E {{postgresql_encoding}} -d {{postgresql_data_directory}}'
  environment: postgresql_env
  when: (postgresql_cluster_reset and pgdata_dir_exist.changed) or not db_ready

- name: PostgreSQL | Initialize new database (with specified encoding and locale)
  shell: su -l {{postgresql_service_user}} -c 'initdb --locale {{postgresql_locale}} -E {{postgresql_encoding}} -d {{postgresql_data_directory}}'
  environment: postgresql_env
  when: db_ready.stat.exists == False

- name: PostgreSQL | Update configuration - pt. 1 (pg_hba.conf)
  template:
    src: pg_hba.conf.j2
    dest: "{{postgresql_conf_directory}}/pg_hba.conf"
    owner: "{{ postgresql_service_user }}"
    group: "{{ postgresql_service_group }}"
    mode: 0640
  register: postgresql_configuration_pt1

- name: PostgreSQL | Update configuration - pt. 2 (postgresql.conf)
  template:
    src: postgresql.conf.j2
    dest: "{{postgresql_conf_directory}}/postgresql.conf"
    owner: "{{ postgresql_service_user }}"
    group: "{{ postgresql_service_group }}"
    mode: 0640
  register: postgresql_configuration_pt2

- name: PostgreSQL | Create folder for additional configuration files
  file:
    name: "{{postgresql_conf_directory}}/conf.d"
    state: directory
    owner: "{{ postgresql_service_user }}"
    group: "{{ postgresql_service_group }}"
    mode: 0755

- name: PostgreSQL | Restart PostgreSQL
  service:
    name: postgresql
    state: restarted
  when: postgresql_configuration_pt1.changed or postgresql_configuration_pt2.changed
